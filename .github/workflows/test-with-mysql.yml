
name: Verify
on: [push]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: myapp
      MYSQL_DB: test_database
      MYSQL_HOST: 127.0.0.1
      MYSQL_PASSWORD: ${{ secrets.RAILS_TEST_DB_PASSWORD }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.RAILS_TEST_DB_ROOT_PASSWORD }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DB }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ${{ matrix.ruby-version }}

      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Setup test database
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          bin/rails db:setup
        env: 
          DATABASE_URL: mysql2://${{ env.MYSQL_USER }}:${{ env.MYSQL_PASSWORD }}@127.0.0.1:3306/${{ env.MYSQL_DATABASE }}
      - name: Run tests
        run: bundle exec rake test 
        env:
          DATABASE_URL: mysql2://${{ env.MYSQL_USER }}:${{ env.MYSQL_PASSWORD }}@127.0.0.1:3306/${{ env.MYSQL_DATABASE }}
